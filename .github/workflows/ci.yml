name: CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request:

env:
  TEXLIVE_VERSION: 2025
  TERM: xterm
  # silences warnings from jupyter about not being able to debug the stdlib
  PYDEVD_DISABLE_FILE_VALIDATION: 1

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        # We need login shells (-l) for micromamba to work.
        shell: bash -leo pipefail {0}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment.yml
          post-cleanup: 'all'

      - name: Apt installs
        run: |
          sudo apt update
          sudo apt install --yes poppler-utils imagemagick

      - name: Pip install^2-texlive
        run: pip install install-texlive

      - name: Install TeXlive
        run: python -m install_texlive -p $HOME/texlive -t $TEXLIVE_VERSION --collections='-a' --package-file tex-packages.txt --update -v

      - name: Setup TeXLive
        run: |
          # add to path for following steps
          echo "$HOME/texlive/$TEXLIVE_VERSION/bin/x86_64-linux" >> $GITHUB_PATH
          export PATH="$HOME/texlive/$TEXLIVE_VERSION/bin/x86_64-linux:$PATH"
          tlmgr install --with-doc tex-overview

      - name: Install Comic Sans
        run: |
          mkdir -p $HOME/.local/share/fonts
          curl -LO https://www.wfonts.com/download/data/2014/06/05/comic-sans-ms/comic-sans-ms.zip
          unzip comic-sans-ms.zip -d $HOME/.local/share/fonts
          rm comic-sans-ms.zip
          fc-cache
          fc-list 'Comic Sans MS' | grep Comic
          # generate the lualatex font cache, otherwise it is done in parallel when calling make
          luaotfload-tool --update --force

      - name: latexmkrc
        run: |
          # copy latexmkrc to make sure its used also for vXXX
          mkdir -p ~/.config/latexmk
          cp common/latexmkrc ~/.config/latexmk/

      - name: pre-commit
        run: |
          pre-commit install
          pre-commit

      - name: Check Setup
        run: |
          echo "which python"
          which python
          echo "python --version"
          python --version
          echo "conda list"
          conda list

      - name: Build
        run: |
          make -j 4

      - name: check for errors
        if: always()
        run: "! grep -R --include='*.log' '^!' -A 5 -B 5"

      - name: Prepare Upload
        run: |
          mkdir toolbox-material
          cp **/build/*.pdf toolbox-material
          cp **/build/*.zip toolbox-material
          cp python/build/*.html toolbox-material
          ls -lh toolbox-material

      - uses: actions/upload-artifact@v4
        name: Upload Material
        with:
          name: Toolbox Material
          path: toolbox-material/*
